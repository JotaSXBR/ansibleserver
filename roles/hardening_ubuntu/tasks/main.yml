---
# tasks/main.yml — Hardening Ubuntu 24.04
# Todas as tarefas usam FQCN (Fully-Qualified Collection Name) conforme ansible-lint ≥ 6.
# Cada etapa possui comentários e tags padronizadas (hardening + assunto).

# --------------------------------------------------------------------
# ETAPA 1 – Repositório de segurança, atualização e pacotes essenciais
# --------------------------------------------------------------------
- name: "ETAPA 1 | Adicionar repositório 'noble-security'"
  ansible.builtin.apt_repository:
    repo: "{{ security_repo }}"
    state: present
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_release == "noble"
  tags: [hardening, security, updates]

- name: "ETAPA 1 | Atualizar cache APT e executar dist-upgrade"
  ansible.builtin.apt:
    update_cache: true
    upgrade: dist
    cache_valid_time: 3600
  tags: [hardening, security, updates]

- name: "ETAPA 1 | Instalar pacotes de segurança e utilitários"
  ansible.builtin.package:
    name:
      - ufw
      - fail2ban
      - auditd
      - audispd-plugins
      - sysstat
      - rkhunter
      - debsums
      - apt-listbugs
      - apt-listchanges
      - curl
      - jq
      - openssl
    state: latest
  notify: reload ufw
  tags: [hardening, security, packages]

- name: "ETAPA 1 | Remover pacotes órfãos e limpar cache"
  ansible.builtin.apt:
    autoremove: yes
    autoclean: yes
  tags: [hardening, security, updates]

# --------------------------------------------------------------------
# ETAPA 2 – Usuário de deploy com privilégio sudo
# --------------------------------------------------------------------
- name: "ETAPA 2 | Criar usuário '{{ new_user }}' com senha e grupo sudo"
  ansible.builtin.user:
    name: "{{ new_user }}"
    comment: "Deployment user"
    password: "{{ deploy_password_hash }}"
    groups: sudo
    append: true
    shell: /bin/bash
    state: present
  tags: [hardening, user]

# --------------------------------------------------------------------
# ETAPA 3 – Swap file e swappiness (community.general.swapfile)
# --------------------------------------------------------------------
- name: "ETAPA 3 | Garantir /swapfile presente ({{ swap_size }}) e swappiness=10"
  community.general.swapfile:
    path: /swapfile
    size: "{{ swap_size }}"
    state: present
    swappiness: 10
  tags: [hardening, swap]

# --------------------------------------------------------------------
# ETAPA 4 – Configuração do firewall UFW
# --------------------------------------------------------------------
- name: "ETAPA 4 | Política padrão: negar conexões de entrada"
  community.general.ufw:
    state: enabled
    direction: incoming
    policy: deny
  tags: [hardening, firewall]

- name: "ETAPA 4 | Política padrão: permitir conexões de saída"
  community.general.ufw:
    state: enabled
    direction: outgoing
    policy: allow
  tags: [hardening, firewall]

- name: "ETAPA 4 | Liberar portas TCP necessárias"
  community.general.ufw:
    rule: allow
    port: "{{ item }}"
    proto: tcp
  loop: "{{ ufw_allowed_ports }}"
  tags: [hardening, firewall]

# --------------------------------------------------------------------
# ETAPA 5 – Hardening do SSH
# --------------------------------------------------------------------
- name: "ETAPA 5 | Garantir 'Port 22' configurado"
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#?Port '
    line: 'Port 22'
  tags: [hardening, ssh]

- name: "ETAPA 5 | Desabilitar login root via SSH"
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#?PermitRootLogin '
    line: 'PermitRootLogin no'
  tags: [hardening, ssh]

- name: "ETAPA 5 | Garantir PasswordAuthentication habilitado"
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#?PasswordAuthentication '
    line: 'PasswordAuthentication yes'
  tags: [hardening, ssh]

- name: "ETAPA 5 | Inserir opções extras de hardening"
  ansible.builtin.blockinfile:
    path: /etc/ssh/sshd_config
    marker: "# {mark} ANSIBLE HARDENING"
    block: |
      LogLevel VERBOSE
      X11Forwarding no
      AllowAgentForwarding no
      AllowTcpForwarding no
      MaxAuthTries 3
      MaxSessions 2
      TCPKeepAlive no
  notify: reload sshd
  tags: [hardening, ssh]

- name: "ETAPA 5 | Validar sintaxe do sshd_config"
  ansible.builtin.command: sshd -t
  changed_when: false
  tags: [hardening, ssh]

# --------------------------------------------------------------------
# ETAPA 6 – Políticas de sistema / kernel
# --------------------------------------------------------------------
- name: "ETAPA 6 | Desabilitar core dumps"
  ansible.builtin.copy:
    dest: /etc/security/limits.d/99-disable-coredumps.conf
    content: "* hard core 0\n"
    owner: root
    group: root
    mode: '0644'
  tags: [hardening, kernel]

- name: "ETAPA 6 | Ajustar UMASK padrão para 027"
  ansible.builtin.lineinfile:
    path: /etc/login.defs
    regexp: '^UMASK'
    line: 'UMASK           027'
  tags: [hardening, kernel]

- name: "ETAPA 6 | Definir SHA512 para senhas"
  ansible.builtin.lineinfile:
    path: /etc/login.defs
    regexp: '^ENCRYPT_METHOD'
    line: 'ENCRYPT_METHOD SHA512'
  tags: [hardening, kernel]

- name: "ETAPA 6 | Garantir SHA_CRYPT_MIN_ROUNDS 500000"
  ansible.builtin.lineinfile:
    path: /etc/login.defs
    line: 'SHA_CRYPT_MIN_ROUNDS 500000'
    insertafter: EOF
  tags: [hardening, kernel]

- name: "ETAPA 6 | Bloquear protocolos incomuns (dccp, sctp, rds, tipc)"
  ansible.builtin.copy:
    dest: /etc/modprobe.d/99-disable-uncommon-net.conf
    content: |
      install dccp /bin/true
      install sctp /bin/true
      install rds /bin/true
      install tipc /bin/true
  tags: [hardening, kernel]

- name: "ETAPA 6 | Copiar banner legal"
  ansible.builtin.copy:
    src: banner.txt
    dest: "{{ item }}"
  loop:
    - /etc/issue
    - /etc/issue.net
  notify: reload sshd
  tags: [hardening, banner]

# --------------------------------------------------------------------
# ETAPA 7 – Configuração do auditd
# --------------------------------------------------------------------
- name: "ETAPA 7 | Copiar regras customizadas do auditd"
  ansible.builtin.copy:
    src: 99-custom.rules
    dest: /etc/audit/rules.d/99-custom.rules
  notify: reload auditd
  tags: [hardening, auditd]

# --------------------------------------------------------------------
# ETAPA 8 – Configuração do Fail2ban
# --------------------------------------------------------------------
- name: "ETAPA 8 | Copiar jail.local do Fail2ban"
  ansible.builtin.template:
    src: jail.local.j2
    dest: /etc/fail2ban/jail.local
  notify: reload fail2ban
  tags: [hardening, fail2ban]

# --------------------------------------------------------------------
# ETAPA 9 – Configuração do rkhunter
# --------------------------------------------------------------------
- name: "ETAPA 9 | Atualizar assinaturas do rkhunter"
  ansible.builtin.command: rkhunter --update
  changed_when: false
  tags: [hardening, rkhunter]

- name: "ETAPA 9 | Criar baseline inicial (uma vez)"
  ansible.builtin.command: rkhunter --propupd
  args:
    creates: /var/lib/rkhunter/db/rkhunter.dat
  tags: [hardening, rkhunter]

- name: "ETAPA 9 | Agendar verificação semanal do rkhunter"
  ansible.builtin.cron:
    name: "weekly rkhunter scan"
    user: root
    minute: 0
    hour: 3
    weekday: 1
    job: "/usr/bin/rkhunter --check --cronjob --report-warnings-only"
  tags: [hardening, rkhunter]

# --------------------------------------------------------------------
# ETAPA 10 – Fuso horário e NTP
# --------------------------------------------------------------------
- name: "ETAPA 10 | Instalar pacote(s) NTP"
  ansible.builtin.package:
    name: "{{ ntp_packages }}"
    state: latest
  tags: [hardening, ntp]

- name: "ETAPA 10 | Definir fuso horário para {{ timezone }}"
  community.general.timezone:
    name: "{{ timezone }}"
  tags: [hardening, timezone]

- name: "ETAPA 10 | Garantir serviço chrony habilitado e rodando"
  ansible.builtin.service:
    name: chrony
    state: started
    enabled: true
  when: "'chrony' in ntp_packages"
  tags: [hardening, ntp]

- name: "ETAPA 10 | Verificar se chrony está sincronizado"
  ansible.builtin.command: chronyc tracking
  register: chrony_tracking
  changed_when: false
  failed_when: chrony_tracking.rc != 0
  tags: [hardening, ntp] 